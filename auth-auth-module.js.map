{"version":3,"sources":["./src/app/auth/company_setup/company_setup.component.html","./src/app/auth/login/login.component.scss","./src/app/auth/auth.component.ts","./src/app/auth/register/register.component.scss","./src/app/auth/auth.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/login/login.component.ts","./src/app/auth/company_setup/company_setup.component.ts","./src/app/auth/auth.component.html","./src/app/auth/register/register.component.html","./src/app/auth/company_setup/company_setup.component.scss","./src/app/auth/login/login.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,kiBAAme,OAAO,kqSAAkqS,25aAA25a,2vDAA2vD,8zBAA8zB,i6JAAi6J,qEAAqE,eAAe,yDAAyD,UAAU,mxCAAmxC,qEAAqE,eAAe,yDAAyD,iBAAiB,wuEAAwuE,qEAAqE,eAAe,wxCAAwxC,wYAAwY,0EAA0E,yLAAyL,oYAAoY,cAAc,2CAA2C,YAAY,ovBAAovB,YAAY,sFAAsF,yrBAAyrB,2DAA2D,YAAY,+rCAA+rC,E;;;;;;;;;;;;ACArhvC;AAAe,uEAAQ,kBAAkB,kBAAkB,wBAAwB,4BAA4B,GAAG,6CAA6C,maAAma,E;;;;;;;;;;;;;;;;;;;ACAhhB;IAOrC,aAAa,SAAb,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iFAAoC;KAErC,CAAC;GACW,aAAa,CAOzB;AAPyB;;;;;;;;;;;;;ACP1B;AAAe,uEAAQ,kBAAkB,kBAAkB,wBAAwB,4BAA4B,GAAG,6CAA6C,2aAA2a,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3f;AACF;AACI;AACxC;AACM;AACU;AACS;AACX;AACN;AACiB;AACK;AACjB;AACJ;AACe;AAEjE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;QACxB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,qEAAc;aAC1B;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE,EAAE;aACf;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,qEAAc;aAC1B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,8EAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,6FAAsB;gBACjC,WAAW,EAAE,CAAC,sFAAgB,CAAC;aAChC;SACF;KACF;CACF;IAkBY,UAAU,SAAV,UAAU;CAAI;AAAd,UAAU;IAhBtB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,qEAAc,EAAE,8EAAiB,EAAE,6DAAa,EAAE,6FAAsB,CAAC;QACxF,OAAO,EAAE;YACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,mEAAmB;YACnB,oEAAgB;YAChB,4DAAY;YACZ,2DAAW;YACX,oEAAc;YACd,uDAAa,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC;YAC1C,+EAAiB,CAAC,OAAO,EAAE;SAC5B;QACD,SAAS,EAAE;YACT,wFAAe;SAChB;KACF,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AC7D2D;AAEd;AAClB;AACT;IAO5B,iBAAiB,SAAjB,iBAAiB;IAO5B,YAAoB,EAAe,EAAU,OAAwB,EAAU,MAAc;QAAzE,OAAE,GAAF,EAAE,CAAa;QAAU,YAAO,GAAP,OAAO,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAL7F,UAAK,GAAG,EAAE,CAAC;QACX,WAAM,GAAG,IAAI,CAAC;QACd,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAW,SAAS,CAAC;QAG5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC;IACH,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,QAAQ;;QACV,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAG,WAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,OAAO,YAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,0CAAE,OAAO;sBAC5L,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,OAAO,GAAC;YACzF,GAAG,GAAE,IAAI,CAAC;YACV,IAAI,CAAC,KAAK,GAAG,mDAAmD,CAAC;SAClE;aACI,IAAG,WAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,OAAO,GAAC;YAC9F,GAAG,GAAE,IAAI,CAAC;YACV,IAAI,CAAC,KAAK,GAAG,uBAAuB,CAAC;SACtC;aACI,IAAG,WAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,0CAAE,OAAO,GAAC;YACxG,GAAG,GAAE,IAAI,CAAC;YACV,IAAI,CAAC,KAAK,GAAG,4BAA4B,CAAC;SAC3C;aACI,IAAG,WAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,OAAO,GAAC;YAC9F,GAAG,GAAE,IAAI,CAAC;YACV,IAAI,CAAC,KAAK,GAAG,uBAAuB,CAAC;SACtC;aACG;YACF,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACjB;QACD,OAAO,GAAG,CAAC;IACb,CAAC;CAEF;;YA/DQ,0DAAW;YAFX,wFAAe;YAIf,sDAAM;;AAOF,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAsD7B;AAtD6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXoD;AACd;AAClB;AACO;AACc;IAO1D,cAAc,SAAd,cAAc;IAUzB,YAAoB,EAAe,EAAU,QAAyB,EAAU,OAAqB,EAAU,MAAc,EAAU,KAAqB;QAAxI,OAAE,GAAF,EAAE,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAR5J,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAW,OAAO,CAAC;QAC7B,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,EAAE,CAAC;QAEf,WAAM,GAAG,IAAI,CAAC;QACd,iBAAY,GAAG,KAAK,CAAC;QAGnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC1C,CAAC;IACH,CAAC;IAEF,QAAQ;QACN,cAAc,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAG,IAAI,CAAC,EAAE,IAAI,IAAI,EAAC;YACjB,IAAI,GAAG,GAAG;gBACR,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC;aAC7C;YACD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/C,CAAC,CAAC;SACH;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnE,IAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;aAC3B;iBACG;gBACF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;aAC3B;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,IAAI,QAAQ;;QACV,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAG,WAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,OAAO,YAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,OAAO,GAAC;YACxK,GAAG,GAAE,IAAI,CAAC;YACV,IAAI,CAAC,KAAK,GAAG,oCAAoC,CAAC;SACnD;aACI,IAAG,WAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,OAAO,GAAC;YACxF,GAAG,GAAE,IAAI,CAAC;YACV,IAAI,CAAC,KAAK,GAAG,uBAAuB,CAAC;SACtC;aACI,IAAG,WAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,MAAM,YAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,OAAO,GAAC;YACxF,GAAG,GAAE,IAAI,CAAC;YACV,IAAI,CAAC,KAAK,GAAG,uBAAuB,CAAC;SACtC;aACG;YACF,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACjB;QACD,IAAG,GAAG,KAAK,IAAI,EAAC;YACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACrB;aACG;YACF,IAAG,IAAI,CAAC,SAAS,KAAK,EAAE,EAAC;gBACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;iBACG;gBACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;CAIF;;YAhGQ,0DAAW;YADX,wFAAe;YAIf,+EAAY;YADI,sDAAM;YAAtB,8DAAc;;AAQV,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kFAAqC;;KAEtC,CAAC;GACW,cAAc,CAsF1B;AAtF0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXuD;AACX;AAC9B;AACgC;AACC;AAEpB;AACJ;IAOrC,sBAAsB,SAAtB,sBAAsB;IAqDjC,YAAmB,EAAe,EAAU,MAAc,EAAU,YAAsB,EAAU,aAA4B,EAAU,eAAgC;QAAvJ,OAAE,GAAF,EAAE,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,oBAAe,GAAf,eAAe,CAAiB;QApD1K,WAAM,GAAG,IAAI,CAAC;QACd,cAAS,GAAG,KAAK,CAAC;QAGlB,mBAAc,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAG,KAAK,CAAC;QACnB,oBAAe,GAAG,KAAK,CAAC;QACxB,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;QAEnB,kBAAa,GAAG,KAAK,CAAC;QACtB,wBAAmB,GAAG,KAAK,CAAC;QAC5B,oBAAe,GAAG,KAAK,CAAC;QACxB,mBAAc,GAAG,KAAK,CAAC;QACvB,qBAAgB,GAAG,KAAK,CAAC;QACzB,0BAAqB,GAAG,KAAK,CAAC;QAC9B,oBAAe,GAAG,KAAK,CAAC;QACxB,kBAAa,GAAG,KAAK,CAAC;QACtB,qBAAgB,GAAG,KAAK,CAAC;QACzB,WAAM,GAAG,KAAK,CAAC;QACf,kBAAa,GAAG,KAAK,CAAC;QACtB,WAAM,GAAG,KAAK,CAAC;QACf,eAAU,GAAG,KAAK,CAAC;QACnB,WAAM,GAAG,KAAK,CAAC;QACf,cAAS,GAAG,KAAK,CAAC;QAClB,kBAAa,GAAG,KAAK,CAAC;QACtB,UAAK,GAAG,eAAe,CAAC;QACxB,QAAG,GAAG,qCAAqC,CAAC;QAC5C,eAAU,GAAG,EAAE,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;QACd,SAAI,GAAG,EAAE,CAAC;QACV,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAG,EAAE,CAAC;QACb,gBAAW,GAAG,EAAE,CAAC;QACjB,eAAU,GAAG,EAAE,CAAC;QAChB,WAAM,GAAG,EAAE,CAAC;QACZ,cAAS,GAAG,EAAE,CAAC;QACf,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAG,EAAE,CAAC;QACb,UAAK,GAAG,EAAE,CAAC;QACX,UAAK,GAAG,EAAE,CAAC;QACX,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,EAAE,CAAC;QACf,cAAS,GAAG,EAAE,CAAC;QACf,WAAM,GAAG,EAAE,CAAC;QACZ,UAAK,GAAG,EAAE,CAAC;QACX,eAAU,GAAG,QAAQ;IAIyJ,CAAC;IAE/K,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC;YAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC;YAClD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;YAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;YAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACxD,IAAI,CAAC,QAAQ,GAAG,IAAI;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,SAAS,EAAE,CAAC,GAAG,CAAC;YAChB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,sBAAsB,EAAE,CAAC,IAAI,CAAC;YAC9B,GAAG,EAAE,CAAC,IAAI,CAAC;YACX,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,cAAc,EAAE,CAAC,IAAI,CAAC;YACtB,SAAS,EAAE,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC;SACvC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,QAAQ,EAAE,CAAC,GAAG,CAAC;YACf,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,gBAAgB,EAAE,CAAC,IAAI,CAAC;YACxB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,GAAG,EAAE,CAAC,EAAE,CAAC;YACT,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,GAAG,EAAE,CAAC,EAAE,CAAC;YACT,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,cAAc,EAAE,CAAC,IAAI,CAAC;YACtB,qBAAqB,EAAE,CAAC,IAAI,CAAC;YAC7B,iBAAiB,EAAE,CAAC,IAAI,CAAC;YACzB,iBAAiB,EAAE,CAAC,IAAI,CAAC;YACzB,eAAe,EAAE,CAAC,IAAI,CAAC;YACvB,aAAa,EAAE,CAAC,IAAI,CAAC;YACrB,aAAa,EAAE,CAAC,EAAE,CAAC;YACnB,aAAa,EAAE,CAAC,IAAI,CAAC;YACrB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,aAAa,EAAE,CAAC,IAAI,CAAC;YACrB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,SAAS,EAAE,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC;SACvC,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;IACrG,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;IACnG,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACpJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACpJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;IAChH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACjN,CAAC;IAED,QAAQ,CAAC,CAAC;QACR,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9F,IAAI,GAAG,GAAG;YACR,EAAE,EAAE,QAAQ,CAAC,EAAE;YACf,WAAW,EAAE,QAAQ,CAAC,WAAW;YACjC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;SACjD;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7C,CAAC;IAED,WAAW,CAAC,CAAC;QACX,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ,CAAC,CAAC;QACR,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9F,IAAI,GAAG,GAAG;YACR,EAAE,EAAE,QAAQ,CAAC,EAAE;YACf,WAAW,EAAE,QAAQ,CAAC,WAAW;YACjC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK;SACzD;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;IAC9C,CAAC;IAED,WAAW,CAAC,CAAC;QACX,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,CAAC;QACL,IAAI,GAAG,GAAG;YACR,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;SACpD;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC;IAC3C,CAAC;IAED,QAAQ,CAAC,CAAC;QACR,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IAED,eAAe,CAAC,KAAU;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,OAAO,GAAgB,QAAQ,CAAC,aAAa,CAAC,yBAAyB,CAAgB,CAAC;QAC5F,OAAO,CAAC,KAAK,EAAE,CAAC;QAChB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC/C,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;gBAC1B,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;aAChC,CAAC,CAAC;YACH,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5C,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,EAAE;gBACxB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAgB,CAAC;YAC3C,CAAC;SACF;IACH,CAAC;IAED,eAAe,CAAC,KAAU;QACxB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7B,IAAI,OAAO,GAAgB,QAAQ,CAAC,aAAa,CAAC,0DAA0D,CAAgB,CAAC;YAC7H,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC1C,OAAO,CAAC,YAAY,CAAE,OAAO,EAAE,QAAQ,CAAC;YACxC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC/C,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;oBAC1B,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;iBAChC,CAAC,CAAC;gBACH,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,EAAE;oBACxB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAiB,CAAC;gBAC5C,CAAC;aACF;SACF;IACH,CAAC;IAED,OAAO;QACL,cAAc,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,OAAO;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;QACrE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,GAAE,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,UAAU;QACR,IAAI,GAAG,GAAG,IAAI;QACd,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;YAChD,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aACG;YACF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;YAChH,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACjC;aACG;YACF,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;SAClC;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;YACxG,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC7B;aACG;YACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;YACjD,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;aACG;YACF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC7B;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;YAC7C,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;aACG;YACF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;YAClD,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;SACnC;aACG;YACF,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;SACpC;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;YAC5G,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC7B;aACG;YACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;YACxG,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aACG;YACF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;YAC1H,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;aACG;YACF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;YACzC,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;aACG;YACF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;YAChD,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aACG;YACF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;YACzC,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;aACG;YACF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;YAC7C,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aACG;YACF,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;YAClH,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;aACG;YACF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;YAClH,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;aACG;YACF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;YAC9G,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;aACG;YACF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;YAC1G,GAAG,GAAG,KAAK,CAAC;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;aACG;YACF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,SAAS;QACP,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE;QAC5B,IAAG,IAAI,EAAC;YACN,IAAI,GAAG,GAAG;gBACR,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK;gBACnD,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK;gBAC/D,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW;gBAC1G,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK;gBACvD,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;gBACrD,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;gBAC7C,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;gBACvC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;gBAC/C,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK;gBAC3C,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;gBAC/C,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK;gBACvD,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK;gBACrC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK;gBACnD,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK;gBACrC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;gBAC7C,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK;gBACvD,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK;gBAC3D,qBAAqB,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK;gBACzE,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK;gBACjE,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK;gBACjE,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK;gBAC7D,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK;gBACzD,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK;gBACzD,SAAS,EAAE,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC;gBACtC,UAAU,EAAE,IAAI,CAAC,SAAS;gBAC1B,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,KAAK,EAAE,IAAI,CAAC,MAAM;aACrB;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CACb;gBACE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;gBAClC,SAAS,EAAE,IAAI,CAAC,UAAU;aAC3B,CACF;YACD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACxB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SAChB;IACH,CAAC;IAED,YAAY,CAAC,CAAC;QACZ,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CACb;YACE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAClC,SAAS,EAAE,IAAI,CAAC,UAAU;SAC3B,CACF;IACH,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,IAAI,GAAG,GAAG,IAAI,CAAC;QACf,IAAG,IAAI,IAAI,CAAC,EAAC;YACX,IAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;gBAClD,GAAG,GAAG,KAAK,CAAC;gBACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;iBACG;gBACF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;YACD,IAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;gBAClD,GAAG,GAAG,KAAK,CAAC;gBACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;iBACG;gBACF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;YACD,IAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;gBAC9C,GAAG,GAAG,KAAK,CAAC;gBACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBACG;gBACF,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;YACD,IAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,KAAK,EAAE,EAAC;gBACnD,GAAG,GAAG,KAAK,CAAC;gBACZ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;iBACG;gBACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAC9B;YACD,IAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;gBAC9G,GAAG,GAAG,KAAK,CAAC;gBACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;iBACG;gBACF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;YACD,IAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;gBAC1G,GAAG,GAAG,KAAK,CAAC;gBACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;iBACG;gBACF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;YACD,IAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK,KAAK,IAAI,EAAC;gBAC9H,GAAG,GAAG,KAAK,CAAC;gBACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBACG;gBACF,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;YACD,IAAG,GAAG,KAAK,IAAI,EAAC;gBACd,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;gBAC/B,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC;aAC7B;SACF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,CAAC;QACN,IAAG,IAAI,CAAC,SAAS,EAAC;YAChB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;SAChC;aACG;YACF,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;iBACG;gBACF,sEAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,eAAe;oBACtB,IAAI,EAAE,SAAS;oBACf,gBAAgB,EAAE,IAAI;oBACtB,kBAAkB,EAAE,SAAS;oBAC7B,iBAAiB,EAAE,MAAM;oBACzB,iBAAiB,EAAE,KAAK;oBACxB,mBAAmB,EAAE,IAAI;iBAC1B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBACjB,IAAI,MAAM,CAAC,WAAW,EAAE;wBACtB,sEAAI,CAAC,IAAI,CAAC;4BACR,KAAK,EAAE,eAAe;4BACtB,iBAAiB,EAAE,KAAK;4BACxB,YAAY,EAAE,GAAG,EAAE;gCACf,sEAAI,CAAC,WAAW,EAAE;gCAClB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oCAChE,sEAAI,CAAC,KAAK,EAAE,CAAC;oCACb,IAAG,IAAI,CAAC,EAAE,KAAK,CAAC,EAAC;wCACf,sEAAI,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAyB,EAAE,SAAS,CAAC,CAAC;wCACvD,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;wCAC/B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;wCACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wCACtB,IAAI,CAAC,UAAU,GAAG,UAAU;qCAC7B;yCACG;wCACF,sEAAI,CAAC,IAAI,CAAC,SAAS,EAAE,qBAAqB,EAAE,OAAO,CAAC,CAAC;qCACtD;gCACH,CAAC,CAAC,CAAC;4BACP,CAAC;yBACJ,CAAC,CAAC;qBACF;gBACH,CAAC,CAAC;aACJ;SACD;IACH,CAAC;IAED,cAAc;QACZ,cAAc,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;CAEF;;YAxiBmB,0DAAW;YAFtB,sDAAM;YAIN,mEAAQ;YALR,6EAAa;YADb,wFAAe;;;yBAgErB,uDAAS,SAAC,YAAY;yBACtB,uDAAS,SAAC,YAAY;;AAnDZ,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,0FAA6C;;KAE9C,CAAC;GACW,sBAAsB,CA8hBlC;AA9hBkC;;;;;;;;;;;;;ACdnC;AAAe,gGAAiC,E;;;;;;;;;;;;ACAhD;AAAe,kqDAAmmD,OAAO,kUAAkU,YAAY,2PAA2P,E;;;;;;;;;;;;ACAlsE;AAAe,uEAAQ,kBAAkB,kBAAkB,wBAAwB,4BAA4B,GAAG,6CAA6C,2bAA2b,E;;;;;;;;;;;;ACA1lB;AAAe,6tDAA8pD,OAAO,6EAA6E,WAAW,wVAAwV,YAAY,2PAA2P,E","file":"auth-auth-module.js","sourcesContent":["export default \"<div class=\\\"spinner-wrapper full-screen\\\" *ngIf=\\\"loader\\\">\\n  <div class=\\\"spinner\\\"></div>\\n</div>\\n<div class=\\\"row w-100 mx-0 auth-page\\\">\\n  <div class=\\\"col-md-12 col-xl-10 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 pl-md-0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                  <h6 class=\\\"card-title\\\">{{Title}}</h6>\\n          \\n                  <aw-wizard #wizardForm>\\n                    <aw-wizard-step stepTitle=\\\"step 1\\\">\\n                      <form [formGroup]=\\\"companyForm\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"exampleInputUsername1\\\">Company Name</label>\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"companyName\\\" autocomplete=\\\"off\\\" placeholder=\\\"Company Name\\\">\\n                                  <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errCompanyName\\\">Company Name is needed!</p>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                  <label>File upload</label>\\n                                  <input (change)=\\\"handleFileInput($event)\\\" accept=\\\".png, .jpg, .jpeg\\\" type=\\\"file\\\" name=\\\"img[]\\\" class=\\\"file-upload-default\\\" id=\\\"fileUploadInputExample\\\">\\n                                  <div class=\\\"input-group col-xs-12\\\" (click)=\\\"openFileBrowser($event)\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control file-upload-info\\\" disabled=\\\"\\\" placeholder=\\\"Upload Image\\\">\\n                                    <span class=\\\"input-group-append\\\">\\n                                      <button class=\\\"file-upload-browse btn btn-primary\\\" type=\\\"button\\\">Upload</button>\\n                                    </span>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"exampleInputUsername1\\\">Company Code</label>\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"companyCode\\\" autocomplete=\\\"off\\\" placeholder=\\\"Company Code\\\">\\n                                  <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errCompanyCode\\\">Company Code is needed!</p>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"media d-block d-sm-flex\\\">\\n                                  <img [src]=\\\"url\\\" height=\\\"150\\\" width=\\\"width\\\" src=\\\"https://via.placeholder.com/200x150\\\" alt=\\\"...\\\">\\n                                </div>\\n                              </div>\\n                            </div>\\n                            <hr>\\n                            <div class=\\\"card-title\\\">\\n                              <h6>Address</h6>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-sm-2\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label class=\\\"control-label\\\">Zip Code</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"zipCode\\\" class=\\\"form-control\\\" placeholder=\\\"Zip Code\\\">\\n                                  <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errZipCode\\\">Zip Code is needed!</p>\\n                                </div>\\n                              </div><!-- Col -->\\n                              <div class=\\\"col-sm-1\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label class=\\\"control-label\\\">Unit/Flr #</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"unit\\\" class=\\\"form-control\\\" placeholder=\\\"Unit/Flr #\\\">\\n                                </div>\\n                              </div><!-- Col -->\\n                              <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label class=\\\"control-label\\\">Building</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"building\\\" class=\\\"form-control\\\" placeholder=\\\"Unit/Flr #\\\">\\n                                </div>\\n                              </div><!-- Col -->\\n                              <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label class=\\\"control-label\\\">Street</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"street\\\" class=\\\"form-control\\\" placeholder=\\\"Enter zip code\\\">\\n                                </div>\\n                              </div><!-- Col -->\\n                              <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label class=\\\"control-label\\\">Barangay</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"barangay\\\" class=\\\"form-control\\\" placeholder=\\\"Barangay\\\">\\n                                </div>\\n                              </div><!-- Col -->\\n                            </div><!-- Row -->\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label class=\\\"control-label\\\">Municipality</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"municipality\\\" class=\\\"form-control\\\" placeholder=\\\"Municipality\\\">\\n                                  <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errMunicipality\\\">Municipality is needed!</p>\\n                                </div>\\n                              </div><!-- Col -->\\n                              <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label class=\\\"control-label\\\">Region</label>\\n                                  <ng-select \\n                                  [items]=\\\"region\\\"\\n                                  name=\\\"Country\\\"\\n                                  bindLabel=\\\"description\\\" \\n                                  bindValue=\\\"id\\\" \\n                                  placeholder=\\\"Select Country\\\"\\n                                  formControlName=\\\"selectedRegion\\\"\\n                                  (change)=\\\"selectRegion()\\\">\\n                                </ng-select>\\n                                  <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errRegion\\\">Region is needed!</p>\\n                                </div>\\n                              </div><!-- Col -->\\n                              <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label class=\\\"control-label\\\">City</label>\\n                                  <ng-select \\n                                  [items]=\\\"companyCity\\\"\\n                                  name=\\\"Country\\\"\\n                                  bindLabel=\\\"to_description\\\" \\n                                  bindValue=\\\"to_id\\\" \\n                                  placeholder=\\\"Select Country\\\"\\n                                  formControlName=\\\"selectedCity\\\">\\n                                </ng-select>\\n                                  <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errCity\\\">City is needed!</p>\\n                                </div>\\n                              </div><!-- Col -->\\n                              <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label class=\\\"control-label\\\">Country</label>\\n                                  <ng-select \\n                                  [items]=\\\"country\\\"\\n                                  name=\\\"Country\\\"\\n                                  bindLabel=\\\"description\\\" \\n                                  bindValue=\\\"id\\\" \\n                                  placeholder=\\\"Select Country\\\"\\n                                  formControlName=\\\"selectedCompanyCountry\\\">\\n                                </ng-select>\\n                                  <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errCountry\\\">Country is needed!</p>\\n                                </div>\\n                              </div><!-- Col -->\\n                            </div><!-- Row -->\\n                        </div>\\n                      </div>  \\n                      <div class=\\\"d-flex justify-content-center mt-2\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary mr-2\\\" (click)=\\\"reLogin()\\\">Re-Login</button>\\n                        <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"nextStep(1)\\\">Continue</button>\\n                      </div>\\n                    </form>\\n                    </aw-wizard-step>\\n                    \\n                    <aw-wizard-step stepTitle=\\\"step 2\\\">\\n                      <ng-template #xlModal let-modal>\\n                        <div class=\\\"modal-header\\\">\\n                          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Branch Details</h5>\\n                          <button type=\\\"button\\\" class=\\\"close\\\" #closeModal (click)=\\\"modal.close('by: close icon')\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                          </button>\\n                        </div>\\n                        <div class=\\\"modal-body\\\">\\n                          <form [formGroup]=\\\"branchForm\\\">\\n                          <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                              <h6 class=\\\"card-title\\\">Branch Information</h6>\\n                                  <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                      <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\">Branch Name</label>\\n                                        <input type=\\\"text\\\" formControlName=\\\"branchName\\\" class=\\\"form-control\\\" placeholder=\\\"Branch Name\\\">\\n                                        <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errbranchName\\\">Branch Name is needed!</p>\\n                                      </div>\\n                                    </div><!-- Col -->\\n                                    <div class=\\\"col-sm-6\\\">\\n                                      <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\">Industry</label>\\n                                        <ng-select \\n                                        [items]=\\\"industry\\\"\\n                                        name=\\\"Industry\\\"\\n                                        bindLabel=\\\"description\\\" \\n                                        bindValue=\\\"id\\\" \\n                                        placeholder=\\\"Select Industry\\\"\\n                                        formControlName=\\\"selectedIndustry\\\">\\n                                      </ng-select>\\n                                      <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errselectedIndustry\\\">Industry is needed!</p>\\n                                      </div>\\n                                    </div><!-- Col -->\\n                                  </div><!-- Row -->\\n                                  <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                      <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\">Bank</label>\\n                                        <ng-select \\n                                        [items]=\\\"bank\\\"\\n                                        name=\\\"Bank\\\"\\n                                        bindLabel=\\\"description\\\" \\n                                        bindValue=\\\"id\\\" \\n                                        placeholder=\\\"Select Bank\\\"\\n                                        formControlName=\\\"selectedBank\\\">\\n                                      </ng-select>\\n                                      <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errselectedBank\\\">Bank is needed!</p>\\n                                      </div>\\n                                    </div><!-- Col -->\\n                                    <div class=\\\"col-sm-6\\\">\\n                                      <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\">Bank Account</label>\\n                                        <input type=\\\"text\\\" formControlName=\\\"bankAccount\\\" class=\\\"form-control\\\" placeholder=\\\"Bank Account\\\">\\n                                        <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errbankAccount\\\">Bank is needed!</p>\\n                                      </div>\\n                                    </div><!-- Col -->\\n                                  </div><!-- Row -->\\n                            </div>\\n                          </div>\\n                          <hr>\\n                          <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                              <div class=\\\"card-title\\\">Branch Address</div>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-2\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Zip Code</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"zipCode\\\" class=\\\"form-control\\\" placeholder=\\\"Zip Code\\\">\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errBranchZipCode\\\">Zip Code is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-1\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Unit/Flr #</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"unit\\\" class=\\\"form-control\\\" placeholder=\\\"Unit/Flr #\\\">\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-3\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Building</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"building\\\" class=\\\"form-control\\\" placeholder=\\\"Unit/Flr #\\\">\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-3\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Street</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"street\\\" class=\\\"form-control\\\" placeholder=\\\"Enter zip code\\\">\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-3\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Barangay</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"barangay\\\" class=\\\"form-control\\\" placeholder=\\\"Barangay\\\">\\n                                  </div>\\n                                </div><!-- Col -->\\n                              </div><!-- Row -->\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-3\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Municipality</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"municipality\\\" class=\\\"form-control\\\" placeholder=\\\"Municipality\\\">\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errBranchMunicipality\\\">Municipality is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-3\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Region</label>\\n                                    <ng-select \\n                                    [items]=\\\"region\\\"\\n                                    name=\\\"Country\\\"\\n                                    bindLabel=\\\"description\\\" \\n                                    bindValue=\\\"id\\\" \\n                                    placeholder=\\\"Select Country\\\"\\n                                    formControlName=\\\"selectedRegion\\\"\\n                                    (change)=\\\"selectBranchRegion()\\\">\\n                                  </ng-select>\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errBranchRegion\\\">Region is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-3\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">City</label>\\n                                    <ng-select \\n                                    [items]=\\\"branchCity\\\"\\n                                    name=\\\"Country\\\"\\n                                    bindLabel=\\\"to_description\\\" \\n                                    bindValue=\\\"to_id\\\" \\n                                    placeholder=\\\"Select Country\\\"\\n                                    formControlName=\\\"selectedCity\\\">\\n                                  </ng-select>\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errBranchCity\\\">City is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-3\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Country</label>\\n                                    <ng-select \\n                                    [items]=\\\"country\\\"\\n                                    name=\\\"Country\\\"\\n                                    bindLabel=\\\"description\\\" \\n                                    bindValue=\\\"id\\\" \\n                                    placeholder=\\\"Select Country\\\"\\n                                    formControlName=\\\"selectedBranchCountry\\\">\\n                                  </ng-select>\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errBranchCountry\\\">Country is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                              </div><!-- Row -->\\n                            </div>\\n                          </div>\\n                          <hr>\\n                          <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                              <div class=\\\"card-title\\\">Government Information</div>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">SSS</label>\\n                                    <input class=\\\"form-control mb-4 mb-md-0\\\" formControlName=\\\"sss\\\" mask=\\\"00-0000000-0\\\" [showMaskTyped]=\\\"true\\\" />\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errSSS\\\">SSS is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-6\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Philhealth</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"philhealth\\\" mask=\\\"00-000000000-0\\\" [showMaskTyped]=\\\"true\\\" placeholder=\\\"Philhealth\\\">\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errPhilhealth\\\">Philhealth is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                              </div><!-- Row -->\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">TIN</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"tin\\\" mask=\\\"000-000-000-000\\\" [showMaskTyped]=\\\"true\\\" placeholder=\\\"TIN\\\" placeholder=\\\"TIN\\\">\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errTIN\\\">TIN is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-6\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Pagibig</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pagibig\\\" mask=\\\"0000-0000-0000\\\" [showMaskTyped]=\\\"true\\\" placeholder=\\\"Pagibig\\\">\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errPagibig\\\">Pagibig is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                              </div>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-2\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">RDO</label>\\n                                    <ng-select \\n                                    [items]=\\\"rdoOffice\\\"\\n                                    name=\\\"RDO Office\\\"\\n                                    bindLabel=\\\"description\\\" \\n                                    bindValue=\\\"id\\\" \\n                                    placeholder=\\\"Select RDO Office\\\"\\n                                    formControlName=\\\"selectedRdoOffice\\\"\\n                                    (change)=\\\"selectRdoOffice()\\\">\\n                                    </ng-select>\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errRDO\\\">RDO is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-4\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">&nbsp;</label>\\n                                    <ng-select \\n                                    [items]=\\\"rdoBranch\\\"\\n                                    name=\\\"RDO Branch\\\"\\n                                    bindLabel=\\\"description\\\" \\n                                    bindValue=\\\"id\\\" \\n                                    placeholder=\\\"Select RDO Branch\\\"\\n                                    formControlName=\\\"selectedRdoBranch\\\"\\n                                    (change)=\\\"selectRdoBranch()\\\">\\n                                    </ng-select>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-2\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Branch</label>\\n                                    <ng-select \\n                                    [items]=\\\"pRegion\\\"\\n                                    name=\\\"Branch\\\"\\n                                    bindLabel=\\\"description\\\" \\n                                    bindValue=\\\"id\\\" \\n                                    placeholder=\\\"Select Branch\\\"\\n                                    formControlName=\\\"selectedPRegion\\\"\\n                                    (change)=\\\"selectPBranch()\\\">\\n                                    </ng-select>\\n                                    <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errBranch\\\">Branch is needed!</p>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-2\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">&nbsp;</label>\\n                                    <ng-select \\n                                    [items]=\\\"pCity\\\"\\n                                    name=\\\"Branch\\\"\\n                                    bindLabel=\\\"to_description\\\" \\n                                    bindValue=\\\"to_id\\\" \\n                                    placeholder=\\\"Select City\\\"\\n                                    formControlName=\\\"selectedPCity\\\"\\n                                    (change)=\\\"selectPCity()\\\">\\n                                    </ng-select>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-2\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">&nbsp;</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"selectedPCode\\\" class=\\\"form-control\\\" placeholder=\\\"Code\\\">\\n                                  </div>\\n                                </div><!-- Col -->\\n                              </div><!-- Row -->\\n                            </div>\\n                          </div>\\n                          <hr>\\n                          <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                              <div class=\\\"card-title\\\">Contact Information</div>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-2\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Phone</label>\\n                                    <ng-select \\n                                    [items]=\\\"phone\\\"\\n                                    name=\\\"Bank\\\"\\n                                    bindLabel=\\\"description\\\" \\n                                    bindValue=\\\"id\\\" \\n                                    placeholder=\\\"Select Type\\\"\\n                                    formControlName=\\\"selectedPhone\\\">\\n                                  </ng-select>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-4\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Number</label>\\n                                    <div class=\\\"row\\\">\\n                                      <div class=\\\"col-md-10\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"phoneNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Number\\\">\\n                                      </div>\\n                                      <div class=\\\"col-md-2\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"addPhone($event)\\\" title=\\\"Add\\\" class=\\\"btn btn-sm btn-primary btn-icon\\\">\\n                                          <i class=\\\"feather icon-plus\\\"></i>\\n                                        </button>\\n                                      </div>\\n                                    </div>\\n                                    \\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-2\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Email</label>\\n                                    <ng-select \\n                                    [items]=\\\"email\\\"\\n                                    name=\\\"Bank\\\"\\n                                    bindLabel=\\\"description\\\" \\n                                    bindValue=\\\"id\\\" \\n                                    placeholder=\\\"Select Type\\\"\\n                                    formControlName=\\\"selectedEmail\\\">\\n                                  </ng-select>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-sm-4\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">Address</label>\\n                                    <div class=\\\"row\\\">\\n                                      <div class=\\\"col-md-10\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"emailAddress\\\" class=\\\"form-control\\\" placeholder=\\\"@illimitado.com\\\">\\n                                      </div>\\n                                      <div class=\\\"col-md-2\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"addEmail($event)\\\" title=\\\"Add\\\" class=\\\"btn btn-sm btn-primary btn-icon\\\">\\n                                          <i class=\\\"feather icon-plus\\\"></i>\\n                                        </button>\\n                                      </div>\\n                                    </div>\\n                                  </div>\\n                                </div><!-- Col -->\\n                              </div>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                  <div class=\\\"table-responsive\\\">\\n                                    <table class=\\\"table\\\">\\n                                      <thead>\\n                                        <tr>\\n                                          <th>Type</th>\\n                                          <th>Number</th>\\n                                          <th></th>\\n                                        </tr>\\n                                      </thead>\\n                                      <tbody>\\n                                          <tr *ngFor=\\\"let x of phoneList; let i = index\\\">\\n                                            <td>{{x.description}}</td>\\n                                            <td>{{x.number}}</td>\\n                                            <td> \\n                                              <button type=\\\"button\\\" (click)=\\\"removePhone(i)\\\" title=\\\"Remove\\\" class=\\\"btn btn-sm btn-danger btn-icon\\\">\\n                                                <i class=\\\"feather icon-trash\\\"></i>\\n                                              </button> \\n                                          </td>\\n                                          </tr>\\n                                      </tbody>\\n                                    </table>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                  <div class=\\\"table-responsive\\\">\\n                                    <table class=\\\"table\\\">\\n                                      <thead>\\n                                        <tr>\\n                                          <th>Type</th>\\n                                          <th>Address</th>\\n                                          <th></th>\\n                                        </tr>\\n                                      </thead>\\n                                      <tbody>\\n                                          <tr *ngFor=\\\"let x of emailList; let i = index\\\">\\n                                            <td>{{x.description}}</td>\\n                                            <td>{{x.email_address}}</td>\\n                                            <td> <button type=\\\"button\\\" (click)=\\\"removeEmail(i)\\\" title=\\\"Remove\\\" class=\\\"btn btn-sm btn-danger btn-icon\\\">\\n                                              <i class=\\\"feather icon-trash\\\"></i>\\n                                            </button> </td>\\n                                          </tr>\\n                                      </tbody>\\n                                    </table>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <hr>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-3\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label\\\">IP Address</label>\\n                                    <div class=\\\"row\\\">\\n                                      <div class=\\\"col-md-10\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"ipAddress\\\" class=\\\"form-control\\\">\\n                                      </div>\\n                                      <div class=\\\"col-md-2\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"addIP($event)\\\" title=\\\"Add\\\" class=\\\"btn btn-sm btn-primary btn-icon\\\">\\n                                          <i class=\\\"feather icon-plus\\\"></i>\\n                                        </button>\\n                                      </div>\\n                                    </div>\\n                                  </div>\\n                                </div><!-- Col -->\\n                                <div class=\\\"col-md-3\\\">\\n                                  <div class=\\\"table-responsive\\\">\\n                                    <table class=\\\"table\\\">\\n                                      <thead>\\n                                        <tr>\\n                                          <th>IP</th>\\n                                          <th></th>\\n                                        </tr>\\n                                      </thead>\\n                                      <tbody>\\n                                          <tr *ngFor=\\\"let x of ipList; let i = index\\\">\\n                                            <td>{{x.description}}</td>\\n                                            <td> <button type=\\\"button\\\" (click)=\\\"removeIP(i)\\\" title=\\\"Remove\\\" class=\\\"btn btn-sm btn-danger btn-icon\\\">\\n                                              <i class=\\\"feather icon-trash\\\"></i>\\n                                            </button> </td>\\n                                          </tr>\\n                                      </tbody>\\n                                    </table>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          </form>\\n                        </div>\\n                        <div class=\\\"modal-footer\\\">\\n                          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close('by: close button')\\\">Close</button>\\n                          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addBranch()\\\">Save changes</button>\\n                        </div>\\n                      </ng-template>\\n                      <div class=\\\"table-responsive pt-3\\\">\\n                        <table class=\\\"table table-bordered\\\">\\n                          <thead>\\n                            <tr style=\\\"width: 5%;\\\">\\n                              <th>\\n                                <button type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"openXlModal(xlModal)\\\" class=\\\"btn btn-sm btn-primary btn-icon\\\">\\n                                  <i class=\\\"feather icon-plus\\\"></i>\\n                                </button>\\n                              </th>\\n                              <th style=\\\"width: 45%;\\\">Branch Name</th>\\n                              <th style=\\\"width: 45%;\\\">Industry</th>\\n                            </tr>\\n                          </thead>\\n                          <tbody>\\n                            <tr *ngFor=\\\"let x of branchList; let i = index\\\">\\n                              <td>\\n                                <button type=\\\"button\\\" (click)=\\\"removeBranch(i)\\\" title=\\\"Remove\\\" class=\\\"btn btn-sm btn-danger btn-icon\\\">\\n                                  <i class=\\\"feather icon-trash\\\"></i>\\n                                </button> \\n                              </td>\\n                              <td>{{x.branchName}}</td>\\n                              <td>{{x.industry}}</td>\\n                          </tr>\\n                          </tbody>\\n                        </table>\\n                        <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"errBranchList\\\">Please add atleast one branch!</p>\\n                      </div>\\n                      <div class=\\\"d-flex justify-content-center mt-2\\\">\\n                        <button class=\\\"btn btn-light mr-2\\\" type=\\\"button\\\" (click)=\\\"prevStep()\\\">Back</button>\\n                        <!-- <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"nextStep(3)\\\">Continue</button> -->\\n                        <button class=\\\"btn btn-primary btn-icon-text\\\" (click)=\\\"submit($event)\\\">\\n                          <i data-feather=\\\"save\\\" class=\\\"btn-icon-prepend\\\"></i>  {{submitText}}\\n                        </button>\\n                        <button hidden [swal]=\\\"{title: '<strong>HTML <u>example</u></strong>', icon: 'info',\\n                          html: '(You can use <b>bold text</b>, <a href=\\\\'http:\\\\/\\\\/github.com\\\\'>links</a> and other HTML tags)',\\n                          showCloseButton: true,\\n                          showCancelButton: true,\\n                          focusConfirm: false,\\n                          confirmButtonText:'<i class=\\\\'feather icon-thumbs-up\\\\'></i> Great!',\\n                          confirmButtonAriaLabel: 'Thumbs up, great!',\\n                          cancelButtonText: '<i class=\\\\'feather icon-thumbs-down\\\\'></i>',\\n                          cancelButtonAriaLabel: 'Thumbs down'\\n                        }\\\" class=\\\"btn btn-primary\\\">\\n                          {{submitText}}\\n                        </button>\\n                      </div>\\n                    </aw-wizard-step>\\n          \\n                    <aw-wizard-step stepTitle=\\\"finish\\\">\\n                      <div class=\\\"text-center\\\">\\n                        <i data-feather=\\\"check-circle\\\" appFeatherIcon class=\\\"text-success mt-4 mb-2 icon-xxl\\\"></i>\\n                        <h3 class=\\\"text-muted mb-3\\\">Thank you !</h3>\\n                        <p class=\\\"w-75 mx-auto mb-4 text-muted\\\">We are excited to tell you that you are now part of a powerful HCM system. Please login to proceed to our system.</p>\\n                      </div>\\n                      <div class=\\\"d-flex justify-content-center mt-2\\\">\\n                        <button class=\\\"btn btn-light mr-2\\\" type=\\\"button\\\" (click)=\\\"prevStep()\\\">Back</button>\\n                        <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"finishFunction()\\\">Login</button>\\n                      </div>\\n                    </aw-wizard-step>\\n                  </aw-wizard>\\n          \\n                </div>\\n              </div>\\n            </div> \\n          \\n          </div> \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \":host {\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBQ0oiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9Il19 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: []\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \":host {\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHJlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBQ0oiLCJmaWxlIjoicmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9Il19 */\";","import { RegisterService } from './../services/auth/register/register.service';\nimport { AuthGuardService } from './../services/security/auth-guard.service';\nimport { Company_setupComponent } from './company_setup/company_setup.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ArchwizardModule, WizardComponent } from 'angular-archwizard';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxMaskModule, IConfig } from 'ngx-mask';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '',\n        component: LoginComponent\n      },\n      {\n        path: 'login',\n        redirectTo: '',\n      },\n      {\n        path: 'login/:id',\n        component: LoginComponent\n      },\n      {\n        path: 'register',\n        component: RegisterComponent\n      },\n      {\n        path: 'company-setup',\n        component: Company_setupComponent,\n        canActivate: [AuthGuardService]\n      }\n    ]\n  },\n]\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, AuthComponent, Company_setupComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    ArchwizardModule,\n    CommonModule,\n    FormsModule,\n    NgSelectModule,\n    NgxMaskModule.forRoot({ validation: true}), \n    SweetAlert2Module.forRoot(),\n  ],\n  providers: [\n    RegisterService,\n  ]\n})\nexport class AuthModule { }\n","import { RegisterService } from './../../services/auth/register/register.service';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  error = \"\";\n  loader = true;\n  disSubmit: boolean = false;\n  submitText: string = \"Sign Up\";\n\n  constructor(private fb: FormBuilder, private service: RegisterService, private router: Router) {\n     this.registerForm = this.fb.group({\n      'Username': ['', Validators.required],\n      'email_address': ['', Validators.required],\n      'Password': ['', Validators.required]\n    })\n   }\n\n  ngOnInit() {\n    this.loader = false;\n  }\n\n  register(){\n    this.disSubmit = true;\n    this.submitText = \"Loading ...\";\n    this.service.registerUser(this.registerForm.value).subscribe(data => { \n      this.router.navigate(['/login'])\n      this.disSubmit = false;\n      this.submitText = \"Sign Up\";\n    })\n  }\n\n  get validate() {\n    let ret = false;\n    if(this.registerForm.get('Username')?.errors && this.registerForm.get('Username')?.touched && this.registerForm.get('email_address')?.errors && this.registerForm.get('email_address')?.touched\n    && this.registerForm.get('Password')?.errors && this.registerForm.get('Password')?.touched){\n      ret= true;\n      this.error = \"Username, Password and Email Address is required!\";\n    }\n    else if(this.registerForm.get('Username')?.errors && this.registerForm.get('Username')?.touched){\n      ret= true;\n      this.error = \"Username is required!\";\n    }\n    else if(this.registerForm.get('email_address')?.errors && this.registerForm.get('email_address')?.touched){\n      ret= true;\n      this.error = \"Email Address is required!\";\n    }\n    else if(this.registerForm.get('Password')?.errors && this.registerForm.get('Password')?.touched){\n      ret= true;\n      this.error = \"Password is required!\";\n    }\n    else{\n      this.error = \"\";\n    }\n    return ret;\n  }\n\n}\n","import { RegisterService } from './../../services/auth/register/register.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginService } from '../../services/auth/login/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  disSubmit: boolean = false;\n  submitText: string = \"Login\";\n  error = \"\";\n  httperror = \"\";\n  id: string\n  loader = true;\n  httpvalidate = false;\n  \n  constructor(private fb: FormBuilder, private register: RegisterService, private service: LoginService, private router: Router, private route: ActivatedRoute) {\n    this.loginForm = this.fb.group({\n      'username': ['', Validators.required],\n      'password': ['', Validators.required],\n      'company_code': ['', Validators.required]\n    })\n   }\n\n  ngOnInit() {\n    sessionStorage.clear();\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id != null){\n      let obj = {\n        guid: this.route.snapshot.paramMap.get('id')\n      }\n      this.register.verifyUser(obj).subscribe(data => { \n      })\n    }\n    this.loader = false;\n  }\n\n  login() {\n    this.disSubmit = true;\n    this.submitText = \"Loading ...\";\n    this.httperror = \"\";\n    this.service.authenticateUser(this.loginForm.value).subscribe(data => { \n      if(data['id'] === \"0\"){\n        this.httpvalidate = true;\n        this.httperror = data['type'];\n        this.disSubmit = false;\n        this.submitText = \"Login\";\n      }\n      else{\n        this.service.saveToken(data);\n        this.router.navigate([data['routing']]);\n        this.disSubmit = false;\n        this.submitText = \"Login\";\n      }\n    })\n    \n  }\n\n  get validate() {\n    let ret = false;\n    if(this.loginForm.get('username')?.errors && this.loginForm.get('username')?.touched && this.loginForm.get('password')?.errors && this.loginForm.get('password')?.touched){\n      ret= true;\n      this.error = \"Username and Password is required!\";\n    }\n    else if(this.loginForm.get('username')?.errors && this.loginForm.get('username')?.touched){\n      ret= true;\n      this.error = \"Username is required!\";\n    }\n    else if(this.loginForm.get('password')?.errors && this.loginForm.get('password')?.touched){\n      ret= true;\n      this.error = \"Password is required!\";\n    }\n    else{\n      this.error = \"\";\n    }\n    if(ret === true){\n      this.httpvalidate = false;\n      this.httperror = \"\";\n    }\n    else{\n      if(this.httperror === \"\"){\n        this.httpvalidate = false;\n      }\n      else{\n        this.httpvalidate = true;\n      }\n    }\n    return ret;\n  }\n\n  \n\n}\n","import { RegisterService } from './../../services/auth/register/register.service';\nimport { MasterService } from './../../services/master/master.service';\nimport { Router } from '@angular/router';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, Form } from '@angular/forms';\nimport { WizardComponent as BaseWizardComponent } from 'angular-archwizard';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\n\n@Component({\n  selector: 'app-company_setup',\n  templateUrl: './company_setup.component.html',\n  styleUrls: ['./company_setup.component.scss']\n})\nexport class Company_setupComponent implements OnInit {\n  loader = true;\n  isSuccess = false;\n  companyForm: FormGroup;\n  branchForm: FormGroup;\n  errCompanyName = false;\n  errCompanyCode = false;\n  errZipCode = false;\n  errMunicipality = false;\n  errCity = false;\n  errRegion = false;\n  errCountry = false;\n\n  errbranchName = false;\n  errselectedIndustry = false;\n  errselectedBank = false;\n  errbankAccount = false;\n  errBranchZipCode = false;\n  errBranchMunicipality = false;\n  errBranchRegion = false;\n  errBranchCity = false;\n  errBranchCountry = false;\n  errSSS = false;\n  errPhilhealth = false;\n  errTIN = false;\n  errPagibig = false;\n  errRDO = false;\n  errBranch = false;\n  errBranchList = false;\n  Title = \"Company Setup\";\n  url = \"https://via.placeholder.com/200x150\";\n  branchList = [];\n  dropdown = [];\n  bank = [];\n  industry = [];\n  country = [];\n  companyCity = [];\n  branchCity = [];\n  region = [];\n  rdoOffice = [];\n  rdoBranch = [];\n  pRegion = [];\n  pCity = [];\n  phone = [];\n  email = [];\n  phoneList = [];\n  emailList = [];\n  ipList = [];\n  param = [];\n  submitText = \"Submit\"\n  @ViewChild('wizardForm') wizardForm: BaseWizardComponent;\n  @ViewChild('closeModal') closeModal: ElementRef\n  \n  constructor(public fb: FormBuilder, private router: Router, private modalService: NgbModal, private masterService: MasterService, private registerService: RegisterService) { }\n\n  ngOnInit(): void {\n    this.masterService.dropdownList().subscribe(data => { \n      this.industry = data.filter(x => x.type_id === 1)\n      this.bank = data.filter(x => x.type_id === 2)\n      this.country = data.filter(x => x.type_id === 3)\n      this.rdoOffice = data.filter(x => x.type_id === 4)\n      this.rdoBranch = data.filter(x => x.type_id === 5)\n      this.pRegion = data.filter(x => x.type_id === 6)\n      this.region = data.filter(x => x.type_id === 10)\n      this.phone = data.filter(x => x.type_id === 11)\n      this.email = data.filter(x => x.type_id === 12)\n    });\n    this.masterService.dropdownEntitlement().subscribe(data => { \n      this.dropdown = data\n    });\n   \n    this.companyForm = this.fb.group({\n      companyID: ['0'],\n      companyName: [''],\n      companyCode: [''],\n      selectedCompanyCountry: [null],\n      img: [null],\n      zipCode: [''],\n      unit: [''],\n      building: [''],\n      street: [''],\n      barangay: [''],\n      municipality: [''],\n      selectedCity: [null],\n      selectedRegion: [null],\n      createdBy: sessionStorage.getItem('u'),\n    });\n    this.branchForm = this.fb.group({\n      branchID: ['0'],\n      branchName: [''],\n      selectedIndustry: [null],\n      selectedBank: [null],\n      bankAccount: [''],\n      zipCode: [''],\n      unit: [''],\n      building: [''],\n      street: [''],\n      barangay: [''],\n      municipality: [''],\n      sss: [''],\n      philhealth: [''],\n      tin: [''],\n      pagibig: [''],\n      selectedCity: [null],\n      selectedRegion: [null],\n      selectedBranchCountry: [null],\n      selectedRdoOffice: [null],\n      selectedRdoBranch: [null],\n      selectedPRegion: [null],\n      selectedPCity: [null],\n      selectedPCode: [''],\n      selectedPhone: [null],\n      phoneNumber: [''],\n      selectedEmail: [null],\n      emailAddress: [''],\n      ipAddress: [''],\n      createdBy: sessionStorage.getItem('u'),\n    })\n    this.loader = false;\n  }\n\n  selectRegion(){\n    this.companyForm.get('selectedCity').reset();\n    this.companyCity = [];\n    this.companyCity = this.dropdown.filter(x => x.id === this.companyForm.get('selectedRegion').value)\n  }\n\n  selectBranchRegion(){\n    this.branchForm.get('selectedCity').reset();\n    this.branchCity = [];\n    this.branchCity = this.dropdown.filter(x => x.id === this.branchForm.get('selectedRegion').value)\n  }\n\n  selectRdoOffice(){\n    this.branchForm.get('selectedRdoBranch').reset();\n    this.branchForm.get('selectedRdoBranch').setValue(this.dropdown.filter(x => x.id === this.branchForm.get('selectedRdoOffice').value)[0]['to_id']);\n  }\n\n  selectRdoBranch(){\n    this.branchForm.get('selectedRdoOffice').reset();\n    this.branchForm.get('selectedRdoOffice').setValue(this.dropdown.filter(x => x.id === this.branchForm.get('selectedRdoBranch').value)[0]['to_id']);\n  }\n\n  selectPBranch(){\n    this.branchForm.get('selectedPCity').reset();\n    this.pCity = [];\n    this.pCity = this.dropdown.filter(x => x.id === this.branchForm.get('selectedPRegion').value && x.id_to === 0)\n  }\n\n  selectPCity(){\n    this.branchForm.get('selectedPCode').reset();\n    this.branchForm.get('selectedPCode').setValue(this.dropdown.filter(x => x.id === this.branchForm.get('selectedPRegion').value && x.id_to === this.branchForm.get('selectedPCity').value)[0]['to_description']);\n  }\n\n  addPhone(e){\n    let selected = this.phone.filter(x => x.id === this.branchForm.get('selectedPhone').value)[0];\n    let obj = {\n      id: selected.id,\n      description: selected.description,\n      number: this.branchForm.get('phoneNumber').value\n    }\n    this.phoneList.push(obj);\n    this.branchForm.get('selectedPhone').reset();\n    this.branchForm.get('phoneNumber').reset();\n  }\n\n  removePhone(e){\n    this.phoneList.splice(e,1);\n  }\n\n  addEmail(e){\n    let selected = this.email.filter(x => x.id === this.branchForm.get('selectedEmail').value)[0];\n    let obj = {\n      id: selected.id,\n      description: selected.description,\n      email_address: this.branchForm.get('emailAddress').value\n    }\n    this.emailList.push(obj);\n    this.branchForm.get('selectedEmail').reset();\n    this.branchForm.get('emailAddress').reset();\n  }\n\n  removeEmail(e){\n    this.emailList.splice(e,1);\n  }\n\n  addIP(e){\n    let obj = {\n      description: this.branchForm.get('ipAddress').value\n    }\n    this.ipList.push(obj);\n    this.branchForm.get('ipAddress').reset();\n  }\n\n  removeIP(e){\n    this.ipList.splice(e,1);\n  }\n\n  openFileBrowser(event: any) {\n    event.preventDefault();\n    let element: HTMLElement = document.querySelector(\"#fileUploadInputExample\") as HTMLElement;\n    element.click();\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      this.companyForm.patchValue({\n        img: event.target.files[0].name\n      });\n      reader.readAsDataURL(event.target.files[0]);\n\n      reader.onload = (event) => { \n        this.url = event.target.result as string;\n      }\n    }\n  }\n\n  handleFileInput(event: any) {\n    if (event.target.files.length) {\n      let element: HTMLElement = document.querySelector(\"#fileUploadInputExample + .input-group .file-upload-info\") as HTMLElement;\n      let fileName = event.target.files[0].name;\n      element.setAttribute( 'value', fileName)\n      if (event.target.files && event.target.files[0]) {\n        var reader = new FileReader();\n        this.companyForm.patchValue({\n          img: event.target.files[0].name\n        });\n        reader.readAsDataURL(event.target.files[0]);\n        reader.onload = (event) => { \n          this.url = event.target.result  as string;\n        }\n      }\n    }\n  }\n\n  reLogin(){\n    sessionStorage.clear();\n    this.router.navigate(['/login']);\n  }\n\n  openXlModal(content) {\n    this.modalService.open(content, {size: 'xl'}).result.then((result) => {\n    }).catch((res) => {});\n  }\n\n  validation(){\n    let ret = true\n    if(this.branchForm.get('branchName').value === \"\"){\n      ret = false;\n      this.errbranchName = true;\n    }\n    else{\n      this.errbranchName = false;\n    }\n    if(this.branchForm.get('selectedIndustry').value === \"\" || this.branchForm.get('selectedIndustry').value === null){\n      ret = false;\n      this.errselectedIndustry = true;\n    }\n    else{\n      this.errselectedIndustry = false;\n    }\n    if(this.branchForm.get('selectedBank').value === \"\" || this.branchForm.get('selectedBank').value === null){\n      ret = false;\n      this.errselectedBank = true;\n    }\n    else{\n      this.errselectedBank = false;\n    }\n    if(this.branchForm.get('bankAccount').value === \"\"){\n      ret = false;\n      this.errbankAccount = true;\n    }\n    else{\n      this.errbankAccount = false;\n    }\n    if(this.branchForm.get('zipCode').value === \"\"){\n      ret = false;\n      this.errBranchZipCode = true;\n    }\n    else{\n      this.errBranchZipCode = false;\n    }\n    if(this.branchForm.get('municipality').value === \"\"){\n      ret = false;\n      this.errBranchMunicipality = true;\n    }\n    else{\n      this.errBranchMunicipality = false;\n    }\n    if(this.branchForm.get('selectedRegion').value === \"\" || this.branchForm.get('selectedRegion').value === null){\n      ret = false;\n      this.errBranchRegion = true;\n    }\n    else{\n      this.errBranchRegion = false;\n    }\n    if(this.branchForm.get('selectedCity').value === \"\" || this.branchForm.get('selectedCity').value === null){\n      ret = false;\n      this.errBranchCity = true;\n    }\n    else{\n      this.errBranchCity = false;\n    }\n    if(this.branchForm.get('selectedBranchCountry').value === \"\" || this.branchForm.get('selectedBranchCountry').value === null){\n      ret = false;\n      this.errBranchCountry = true;\n    }\n    else{\n      this.errBranchCountry = false;\n    }\n    if(this.branchForm.get('sss').value === \"\"){\n      ret = false;\n      this.errSSS = true;\n    }\n    else{\n      this.errSSS = false;\n    }\n    if(this.branchForm.get('philhealth').value === \"\"){\n      ret = false;\n      this.errPhilhealth = true;\n    }\n    else{\n      this.errPhilhealth = false;\n    }\n    if(this.branchForm.get('tin').value === \"\"){\n      ret = false;\n      this.errTIN = true;\n    }\n    else{\n      this.errTIN = false;\n    }\n    if(this.branchForm.get('pagibig').value === \"\"){\n      ret = false;\n      this.errPagibig = true;\n    }\n    else{\n      this.errPagibig = false;\n    }\n    if(this.branchForm.get('selectedRdoOffice').value === \"\" || this.branchForm.get('selectedRdoOffice').value === null){\n      ret = false;\n      this.errRDO = true;\n    }\n    else{\n      this.errRDO = false;\n    }\n    if(this.branchForm.get('selectedRdoBranch').value === \"\" || this.branchForm.get('selectedRdoBranch').value === null){\n      ret = false;\n      this.errRDO = true;\n    }\n    else{\n      this.errRDO = false;\n    }\n    if(this.branchForm.get('selectedPRegion').value === \"\" || this.branchForm.get('selectedPRegion').value === null){\n      ret = false;\n      this.errBranch = true;\n    }\n    else{\n      this.errBranch = false;\n    }\n    if(this.branchForm.get('selectedPCity').value === \"\" || this.branchForm.get('selectedPCity').value === null){\n      ret = false;\n      this.errBranch = true;\n    }\n    else{\n      this.errBranch = false;\n    }\n    return ret;\n  }\n\n  addBranch(){\n    this.errBranchList = false;\n    let flag = this.validation()\n    if(flag){\n      var obj = {\n        branchID: \"0\",\n        branchName: this.branchForm.get('branchName').value,\n        selectedIndustry: this.branchForm.get('selectedIndustry').value,\n        industry: this.industry.filter(x => x.id === this.branchForm.get('selectedIndustry').value)[0].description,\n        selectedBank: this.branchForm.get('selectedBank').value,\n        bankAccount: this.branchForm.get('bankAccount').value,\n        zipCode: this.branchForm.get('zipCode').value,\n        unit: this.branchForm.get('unit').value,\n        building: this.branchForm.get('building').value,\n        street: this.branchForm.get('street').value,\n        barangay: this.branchForm.get('barangay').value,\n        municipality: this.branchForm.get('municipality').value,\n        sss: this.branchForm.get('sss').value,\n        philhealth: this.branchForm.get('philhealth').value,\n        tin: this.branchForm.get('tin').value,\n        pagibig: this.branchForm.get('pagibig').value,\n        selectedCity: this.branchForm.get('selectedCity').value,\n        selectedRegion: this.branchForm.get('selectedRegion').value,\n        selectedBranchCountry: this.branchForm.get('selectedBranchCountry').value,\n        selectedRdoOffice: this.branchForm.get('selectedRdoOffice').value,\n        selectedRdoBranch: this.branchForm.get('selectedRdoBranch').value,\n        selectedPRegion: this.branchForm.get('selectedPRegion').value,\n        selectedPCity: this.branchForm.get('selectedPCity').value,\n        selectedPCode: this.branchForm.get('selectedPCode').value,\n        createdBy: sessionStorage.getItem('u'),\n        contact_IU: this.phoneList,\n        email_IU: this.emailList,\n        iP_IU: this.ipList,\n    }\n    this.branchList.push(obj);\n    this.param = [];\n    this.param.push(\n      {\n        company_IU: this.companyForm.value,\n        branch_IU: this.branchList\n      }\n    )\n    this.modalService.dismissAll();\n    this.branchForm.reset();\n    this.phoneList = [];\n    this.emailList = [];\n    this.ipList = [];\n    }\n  }\n\n  removeBranch(e){\n    this.errBranchList = false;\n    this.branchList.splice(e,1);\n    this.param = [];\n    this.param.push(\n      {\n        company_IU: this.companyForm.value,\n        branch_IU: this.branchList\n      }\n    )\n  }\n\n  nextStep(step){\n    let ret = true;\n    if(step == 1){\n      if(this.companyForm.get('companyName').value === \"\"){\n        ret = false;\n        this.errCompanyName = true;\n      }\n      else{\n        this.errCompanyName = false;\n      }\n      if(this.companyForm.get('companyCode').value === \"\"){\n        ret = false;\n        this.errCompanyCode = true;\n      }\n      else{\n        this.errCompanyCode = false;\n      }\n      if(this.companyForm.get('zipCode').value === \"\"){\n        ret = false;\n        this.errZipCode = true;\n      }\n      else{\n        this.errZipCode = false;\n      }\n      if(this.companyForm.get('municipality').value === \"\"){\n        ret = false;\n        this.errMunicipality = true;\n      }\n      else{\n        this.errMunicipality = false;\n      }\n      if(this.companyForm.get('selectedRegion').value === \"\" || this.companyForm.get('selectedRegion').value === null){\n        ret = false;\n        this.errRegion = true;\n      }\n      else{\n        this.errRegion = false;\n      }\n      if(this.companyForm.get('selectedCity').value === \"\" || this.companyForm.get('selectedCity').value === null){\n        ret = false;\n        this.errCity = true;\n      }\n      else{\n        this.errCity = false;\n      }\n      if(this.companyForm.get('selectedCompanyCountry').value === \"\" || this.companyForm.get('selectedCompanyCountry').value === null){\n        ret = false;\n        this.errCountry = true;\n      }\n      else{\n        this.errCountry = false;\n      }\n      if(ret === true){\n        this.wizardForm.goToNextStep();\n        this.Title = \"Branch Setup\";\n      }\n    }\n  }\n\n  prevStep(){\n    this.wizardForm.goToPreviousStep();\n  }\n\n  submit(e){\n    if(this.isSuccess){\n      this.wizardForm.goToNextStep();\n    }\n    else{\n      if (Object.keys(this.branchList).length === 0) {\n        this.errBranchList = true;\n      }\n      else{\n        Swal.fire({\n          title: 'Are you sure?',\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Yes',\n          showLoaderOnConfirm: true,\n        }).then((result) => {\n          if (result.isConfirmed) {\n            Swal.fire({\n              title: 'Please Wait !',\n              allowOutsideClick: false,\n              onBeforeOpen: () => {\n                  Swal.showLoading()\n                  this.registerService.tenantCreate(this.param[0]).subscribe(data => { \n                    Swal.close();\n                    if(data.id === 1){\n                      Swal.fire(\"Ok!\", \"Transaction successful!\", \"success\");\n                      this.wizardForm.goToNextStep();\n                      this.Title = \"Success\";\n                      this.isSuccess = true;\n                      this.submitText = \"Continue\"\n                    }\n                    else{\n                      Swal.fire(\"Failed!\", \"Transaction failed!\", \"error\");  \n                    }\n                  });\n              },\n          });\n          }\n        })\n     }  \n    }\n  }\n\n  finishFunction() {\n    sessionStorage.clear();\n    this.router.navigate(['/login']);\n  }\n\n}\n","export default \"<router-outlet></router-outlet>\";","export default \"<div class=\\\"spinner-wrapper full-screen\\\" *ngIf=\\\"loader\\\">\\n  <div class=\\\"spinner\\\"></div>\\n</div>\\n<div class=\\\"row w-100 mx-0 auth-page\\\">\\n  <div class=\\\"col-md-8 col-xl-6 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 pr-md-0\\\">\\n          <div class=\\\"auth-left-wrapper\\\">\\n\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-8 pl-md-0\\\">\\n          <div class=\\\"auth-form-wrapper px-4 py-5\\\">\\n            <a routerLink=\\\".\\\" class=\\\"noble-ui-logo d-block mb-2\\\">Durust<span>HR</span></a>\\n            <h5 class=\\\"text-muted font-weight-normal mb-4\\\">Create a free account.</h5>\\n            <form class=\\\"forms-sample\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputUsername1\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Username\\\" autocomplete=\\\"Username\\\" placeholder=\\\"Username\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email_address\\\" placeholder=\\\"Email\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputPassword1\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\" autocomplete=\\\"current-password\\\" placeholder=\\\"Password\\\">\\n              </div>\\n              <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"validate\\\">{{error}}</p>\\n              <div class=\\\"mt-3\\\">\\n                <button class=\\\"btn btn-primary mr-2 mb-2 mb-md-0\\\" type=\\\"button\\\" type=\\\"submit\\\" [disabled]=\\\"disSubmit\\\">\\n                  <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"disSubmit\\\"></span>\\n                  {{submitText}}\\n                </button>\\n              </div>\\n              <a routerLink=\\\"/login\\\" class=\\\"d-block mt-3 text-muted\\\">Already a user? Sign in</a>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","export default \":host {\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGNvbXBhbnlfc2V0dXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFDSiIsImZpbGUiOiJjb21wYW55X3NldHVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgfSJdfQ== */\";","export default \"<div class=\\\"spinner-wrapper full-screen\\\" *ngIf=\\\"loader\\\">\\n  <div class=\\\"spinner\\\"></div>\\n</div>\\n<div class=\\\"row w-100 mx-0 auth-page\\\">\\n  <div class=\\\"col-md-8 col-xl-6 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 pr-md-0\\\">\\n          <div class=\\\"auth-left-wrapper\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-8 pl-md-0\\\">\\n          <div class=\\\"auth-form-wrapper px-4 py-5\\\">\\n            <a routerLink=\\\".\\\" class=\\\"noble-ui-logo d-block mb-2\\\">Durust<span>HR</span></a>\\n            <h5 class=\\\"text-muted font-weight-normal mb-4\\\">Welcome back! Log in to your account.</h5>\\n            <form class=\\\"forms-sample\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Company Code</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"company_code\\\" placeholder=\\\"Company Code\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Email\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputPassword1\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" autocomplete=\\\"current-password\\\" placeholder=\\\"Password\\\" >\\n              </div>\\n              <div class=\\\"form-check form-check-flat form-check-primary\\\">\\n                <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"validate\\\">{{error}}</p>\\n                <p class=\\\"text-danger mt-1\\\" *ngIf=\\\"httpvalidate\\\">{{httperror}}</p>\\n              </div>\\n              <div class=\\\"mt-3\\\">\\n                <button class=\\\"btn btn-primary mr-2 mb-2 mb-md-0\\\" type=\\\"button\\\" type=\\\"submit\\\" [disabled]=\\\"disSubmit\\\">\\n                  <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"disSubmit\\\"></span>\\n                  {{submitText}}\\n                </button>\\n              </div>\\n              <a routerLink=\\\"/register\\\" class=\\\"d-block mt-3 text-muted\\\" >Not a user? Sign up</a>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";"],"sourceRoot":"webpack:///"}